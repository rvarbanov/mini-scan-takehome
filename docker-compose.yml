version: '3'
services:

  # Starts the P/S emulator
  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:316.0.0-emulators
    ports:
      - "8085:8085"
    entrypoint: gcloud beta emulators pubsub start --project test-project --host-port 0.0.0.0:8085
    healthcheck:
      test: ["CMD", "curl", "-f", "http://pubsub:8085"]
      interval: 5s
      timeout: 10s
      retries: 3

  # Creates a topic
  mk-topic:
    image: alpine/httpie
    depends_on:
      pubsub:
        condition: service_healthy
    command: PUT http://pubsub:8085/v1/projects/test-project/topics/scan-topic

  # Creates a subscription
  mk-subscription:
    image: alpine/httpie
    depends_on:
      mk-topic:
        condition: service_completed_successfully
    command: PUT http://pubsub:8085/v1/projects/test-project/subscriptions/scan-sub topic=projects/test-project/topics/scan-topic --ignore-stdin 

  # Runs the "scanner"
  scanner:
    depends_on:
      mk-topic:
        condition: service_completed_successfully
    environment:
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - PUBSUB_PROJECT_ID=test-project
    build:
      context: .
      dockerfile: ./cmd/scanner/Dockerfile
  
  # db
  db:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB_NAME=mini_scan
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Runs the "consumer"
  consumer:
    depends_on:
      db:
        condition: service_healthy
      mk-subscription:
        condition: service_completed_successfully
    environment:
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - PUBSUB_PROJECT_ID=test-project
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB_NAME=mini_scan
    build:
      context: .
      dockerfile: ./cmd/consumer/Dockerfile


volumes:
  postgres_data: